const { PrismaClient } = require('@prisma/client')
const { v4: uuidv4 } = require('uuid')

const prisma = new PrismaClient()

async function quickCreate() {
  try {
    console.log('๐ ุฅูุดุงุก ุณุฑูุน...')

    // ุฅูุดุงุก ุงููุงูุงุซูู
    const hackathon = await prisma.hackathon.create({
      data: {
        title: 'ูุงูุงุซูู ุชุทููุฑ ุงูุชุทุจููุงุช 2025',
        description: 'ูุณุงุจูุฉ ุชุทููุฑ ุชุทุจููุงุช ูุจุชูุฑุฉ',
        startDate: new Date('2025-02-15'),
        endDate: new Date('2025-02-17'),
        registrationDeadline: new Date('2025-02-10'),
        maxParticipants: 100,
        status: 'open',
        requirements: 'ุฎุจุฑุฉ ุจุฑูุฌุฉ',
        createdBy: 'admin-id'
      }
    })
    console.log('โ ูุงูุงุซูู ุชู')

    // ุงููุดุงุฑููู
    const people = [
      'ุฃุญูุฏ ุงูุนูู', 'ูุงุทูุฉ ุงูุฒูุฑุงูู', 'ูุญูุฏ ุงููุญุทุงูู', 'ููุฑุง ุงูุดูุฑู', 'ุนุจุฏุงูุฑุญูู ุงูุบุงูุฏู',
      'ุณุงุฑุฉ ุงูุจููู', 'ููุณู ุงูุญุฑุจู', 'ุฑูู ุงูุนุชูุจู', 'ุฎุงูุฏ ุงูุฏูุณุฑู', 'ููุฏ ุงูุดูุฑู',
      'ุนูุฑ ุงููุทูุฑู', 'ูููุง ุงูุฌููู', 'ุณูุทุงู ุงูุฑุดูุฏ', 'ูุฑูู ุงูุนูุฒู', 'ุจูุฏุฑ ุงูููุตู'
    ]

    const cities = ['ุงูุฑูุงุถ', 'ุฌุฏุฉ', 'ุงูุฏูุงู', 'ููุฉ', 'ุงูุทุงุฆู']

    for (let i = 0; i < people.length; i++) {
      const name = people[i]
      const email = `user${i+1}@test.com`
      const city = cities[i % cities.length]

      try {
        // ุฅูุดุงุก ุงููุณุชุฎุฏู
        const user = await prisma.user.create({
          data: {
            name: name,
            email: email,
            password_hash: '$2a$10$hash',
            phone: `+96650${1000000 + i}`,
            city: city,
            nationality: 'ุณุนูุฏู',
            role: 'participant'
          }
        })

        // ุฅูุดุงุก ุงููุดุงุฑูุฉ
        await prisma.participant.create({
          data: {
            userId: user.id,
            hackathonId: hackathon.id,
            status: 'pending'
          }
        })

        console.log(`โ ${i+1}. ${name}`)
      } catch (error) {
        console.log(`โ ${name}: ${error.message}`)
      }
    }

    console.log(`\n๐ฏ ุชู! ูุงูุงุซูู ูุน 15 ูุดุงุฑู pending`)
    console.log(`๐ ID: ${hackathon.id}`)

  } catch (error) {
    console.error('โ', error.message)
  } finally {
    await prisma.$disconnect()
  }
}

quickCreate()
