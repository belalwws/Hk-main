const { PrismaClient } = require('@prisma/client')
const bcrypt = require('bcryptjs')

const prisma = new PrismaClient()

async function forceCreate() {
  try {
    console.log('๐ ุฅูุดุงุก ูุณุฑู ููุจูุงูุงุช...')

    // ุฃููุงู ูุดูู ุฅูู ุงูู enums ุงููุชุงุญุฉ
    const result = await prisma.$queryRaw`
      SELECT unnest(enum_range(NULL::hackathonstatus)) as status_value
    `
    console.log('๐ Enum values:', result)

    // ุฅูุดุงุก ุงููุงูุงุซูู ุจู raw SQL
    const hackathonId = 'hack_' + Date.now()
    
    await prisma.$executeRaw`
      INSERT INTO hackathons (
        id, 
        title, 
        description, 
        "startDate", 
        "endDate", 
        "registrationDeadline", 
        "maxParticipants", 
        status, 
        requirements, 
        "createdBy", 
        "createdAt", 
        "updatedAt"
      ) VALUES (
        ${hackathonId},
        'ูุงูุงุซูู ุชุทููุฑ ุงูุชุทุจููุงุช 2025',
        'ูุณุงุจูุฉ ุชุทููุฑ ุชุทุจููุงุช ูุจุชูุฑุฉ',
        '2025-02-15 09:00:00',
        '2025-02-17 18:00:00', 
        '2025-02-10 23:59:59',
        100,
        'open',
        'ุฎุจุฑุฉ ุจุฑูุฌุฉ',
        'admin-id',
        datetime('now'),
        datetime('now')
      )
    `
    
    console.log('โ ุชู ุฅูุดุงุก ุงููุงูุงุซูู:', hackathonId)

    // ุฅูุดุงุก ุงููุณุชุฎุฏููู ูุงููุดุงุฑููู
    const people = [
      'ุฃุญูุฏ ุงูุนูู', 'ูุงุทูุฉ ุงูุฒูุฑุงูู', 'ูุญูุฏ ุงููุญุทุงูู', 'ููุฑุง ุงูุดูุฑู', 'ุนุจุฏุงูุฑุญูู ุงูุบุงูุฏู',
      'ุณุงุฑุฉ ุงูุจููู', 'ููุณู ุงูุญุฑุจู', 'ุฑูู ุงูุนุชูุจู', 'ุฎุงูุฏ ุงูุฏูุณุฑู', 'ููุฏ ุงูุดูุฑู',
      'ุนูุฑ ุงููุทูุฑู', 'ูููุง ุงูุฌููู', 'ุณูุทุงู ุงูุฑุดูุฏ', 'ูุฑูู ุงูุนูุฒู', 'ุจูุฏุฑ ุงูููุตู'
    ]

    const cities = ['ุงูุฑูุงุถ', 'ุฌุฏุฉ', 'ุงูุฏูุงู', 'ููุฉ', 'ุงูุทุงุฆู']
    const passwordHash = await bcrypt.hash('password123', 10)

    for (let i = 0; i < people.length; i++) {
      const userId = 'user_' + Date.now() + '_' + i
      const participantId = 'part_' + Date.now() + '_' + i
      const name = people[i]
      const email = `user${i+1}_${Date.now()}@test.com`
      const city = cities[i % cities.length]

      try {
        // ุฅูุดุงุก ุงููุณุชุฎุฏู
        await prisma.$executeRaw`
          INSERT INTO users (
            id, 
            name, 
            email, 
            "password_hash", 
            phone, 
            city, 
            nationality, 
            role, 
            "createdAt", 
            "updatedAt"
          ) VALUES (
            ${userId},
            ${name},
            ${email},
            ${passwordHash},
            ${`+96650${1000000 + i}`},
            ${city},
            'ุณุนูุฏู',
            'participant',
            datetime('now'),
            datetime('now')
          )
        `

        // ุฅูุดุงุก ุงููุดุงุฑูุฉ
        await prisma.$executeRaw`
          INSERT INTO participants (
            id, 
            "userId", 
            "hackathonId", 
            status, 
            "createdAt", 
            "updatedAt"
          ) VALUES (
            ${participantId},
            ${userId},
            ${hackathonId},
            'pending',
            datetime('now'),
            datetime('now')
          )
        `

        console.log(`โ ${i+1}. ${name} - ${city}`)
        
      } catch (error) {
        console.log(`โ ุฎุทุฃ ูู ${name}:`, error.message)
      }
    }

    // ุงูุชุญูู ูู ุงููุชุงุฆุฌ
    const hackathonCheck = await prisma.$queryRaw`
      SELECT * FROM hackathons WHERE id = ${hackathonId}
    `
    
    const participantCount = await prisma.$queryRaw`
      SELECT COUNT(*) as count FROM participants WHERE "hackathonId" = ${hackathonId}
    `

    console.log('\n๐ ุงููุชุงุฆุฌ ุงูููุงุฆูุฉ:')
    console.log('๐ฏ ุงููุงูุงุซูู:', hackathonCheck[0]?.title)
    console.log('๐ฅ ุนุฏุฏ ุงููุดุงุฑููู:', participantCount[0]?.count)
    console.log('๐ ูุนุฑู ุงููุงูุงุซูู:', hackathonId)
    console.log('โ ุชู ุฅูุดุงุก ูู ุดูุก ุจูุฌุงุญ!')

  } catch (error) {
    console.error('โ ุฎุทุฃ:', error.message)
    console.error('๐ ุชูุงุตูู ุงูุฎุทุฃ:', error)
  } finally {
    await prisma.$disconnect()
  }
}

forceCreate()
